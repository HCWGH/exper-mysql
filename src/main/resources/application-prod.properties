# shardingsphere实现读写分离
spring.shardingsphere.datasource.names=master,slave
#master主库
spring.shardingsphere.datasource.master.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master.url=jdbc:mysql://xxxxxx/t_test?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&autoReconnect=true&useSSL=false
spring.shardingsphere.datasource.master.username=xxxx
spring.shardingsphere.datasource.master.password=xxxx
#slave从库
spring.shardingsphere.datasource.slave.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.slave.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave.url=jdbc:mysql://xxxxx/t_test?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&autoReconnect=true&useSSL=false
spring.shardingsphere.datasource.slave.username=xxxx
spring.shardingsphere.datasource.slave.password=xxxx
#读写分类配置，设置负载均很模式未轮询
spring.shardingsphere.masterslave.load-balance-algorithm-type=round_robin
#最终数据源名称
spring.shardingsphere.masterslave.name=dataSource
#主库名称
spring.shardingsphere.masterslave.master-data-source-name=master
#从库名称多个从库之间','分割
spring.shardingsphere.masterslave.slave-data-source-names=slave
#开启sql显示
spring.shardingsphere.props.sql.show=true
spring.main.allow-bean-definition-overriding=true


mybatis-plus.mapper-locations = classpath*:mapping/*.xml
mybatis-plus.typeAliasesPackage =
mybatis-plus.global-config.id-type = 1


